Exercise
========

0. Create a stack named `lab` from the template `lambda_url_template.yml`.
   (Use `setup.ps1` to do this.)

1. Setup a lambda function called webtest with function URL enabled. 
   Make sure to pick the `lambda-ex-role` as the execution role. 
   In advanced settings:
   Turn on function URL and select NONE as the auth type.

2. Modify your function to return the string (test in browser):
	"Hello from Lambda"
	
3. Modify your function to show the incoming event as JSON in the body of the reponse. (Hint: json.dumps function)

4. Add a query string to the URL: ?name=yourname&town=yourtown
	Can you find the query string in the response?
	Can you also find the queryStringParameters in the response? 
	
5. Modify your function to show *only* the queryStringParameters.

6. Modify your function to say as text:
	"Hello yourname. You are in yourtown." (or similar)
	
7. Modify your function again to return the JSON structure:
	{
		"name": "yourname",
		"town": "yourtown",
		"greeting": "Hello yourname. You are in yourtown."
	}
	
8. Optional: try to consume the API from PowerShell
	Invoke-Webrequest
	ConvertFrom-Json 

9. Modify your function to show the greeting as HTML. 

10. Delete the function.

11. Use `teardown.ps1` to remove the role.